<?xml version="1.0" encoding="UTF-8"?>
   <!DOCTYPE mapper
             PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
             "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
             
   <mapper namespace="spring.project.tcat.persistence.HostDAO">
  	
	<select id="latelyJoinMemberCnt" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM member WHERE member_step=1 AND member_joindate BETWEEN #{yesterday} AND #{today}
	</select>
 
   
   <select id="latelyJoinMember" parameterType="java.util.Map" resultType="spring.project.tcat.VO.MemberVO">
   		<![CDATA[  select * from (
   		SELECT member_id,member_pwd,member_name,member_hp,member_addr,
   		member_email,member_gender,member_birth,point,lastDate,Rating,
   		member_step,member_joindate,rownum rNum from (
        SELECT * FROM member WHERE member_step=1 AND member_joindate BETWEEN #{yesterday} AND #{today}
        ))
   		 WHERE rNum	>= #{start} AND rNum <= #{end} ]]>
   </select>
   
   <select id="sleepMemberCnt" parameterType="int" resultType="int">
   		SELECT COUNT(*) FROM member WHERE member_step=#{_parameter}
   </select>
   
   <select id="sleepMember" parameterType="java.util.Map" resultType="spring.project.tcat.VO.MemberVO">
   		<![CDATA[  select * from (
   		SELECT member_id,member_pwd,member_name,member_hp,member_addr,
   		member_email,member_gender,member_birth,point,lastDate,Rating,
   		member_step,member_joindate,rownum rNum from (
        SELECT * FROM member WHERE member_step=#{Hcnt}
        ))
   		 WHERE rNum	>= #{start} AND rNum <= #{end} ]]>
   </select>
   
   <update id="sleepMemberPro" parameterType="java.util.Map">
   		UPDATE member SET member_step=#{Hcnt} WHERE member_id=#{member_id}
   </update>
   
      <select id="memberManagerSerchListCnt" parameterType="java.util.Map" resultType="int">
   		SELECT COUNT(*) FROM member WHERE member_step=#{Hcnt} 
   		<if test="sCnt==1">
   			AND member_id LIKE #{keyword}
   		</if>
   		<if test="sCnt==2">
   			AND member_name LIKE #{keyword}
   		</if>
   		<if test="sCnt==3">
   			AND member_email LIKE #{keyword}
   		</if>
   		<if test="sCnt==4">
   			AND member_gender LIKE #{keyword}
   		</if>
   		<if test="sCnt==5">
   			AND member_birth LIKE #{keyword}
   		</if>
   		<if test="sCnt==6">
   			AND member_hp LIKE #{keyword}
   		</if>
   		<if test="sCnt==7">
   			AND UPPER(Rating) LIKE UPPER(#{keyword})
   		</if>
   </select>
   
      <select id="memberManagerSerchList" parameterType="java.util.Map" resultType="spring.project.tcat.VO.MemberVO">
   		<![CDATA[
   		SELECT member_id,member_pwd,member_name,member_hp,member_addr,
   		member_email,member_gender,member_birth,point,lastDate,Rating,
   		member_step,member_joindate from (
        SELECT * FROM member WHERE member_step=#{Hcnt} ]]>
        <if test="sCnt==1">
   			AND member_id LIKE #{keyword}
   		</if>
   		<if test="sCnt==2">
   			AND member_name LIKE #{keyword}
   		</if>
   		<if test="sCnt==3">
   			AND member_email LIKE #{keyword}
   		</if>
   		<if test="sCnt==4">
   			AND member_gender LIKE #{keyword}
   		</if>
   		<if test="sCnt==5">
   			AND member_birth LIKE #{keyword}
   		</if>
   		<if test="sCnt==6">
   			AND member_hp LIKE #{keyword}
   		</if>
   		<if test="sCnt==7">
   			AND UPPER(Rating) LIKE UPPER(#{keyword})
   		</if>
       )
   </select>
   
   
  

<!--/////////////////////////////// 18.01.16 명훈 시작/////////////////////////////////////////////////-->
	<!--출력할 공연상품 갯수 가져오기 -->
	<select id="perProductCnt" resultType="int">
		SELECT COUNT(*)
		FROM performanceInfo per, category cat, hallInfo hall, place pla 
		WHERE 	per.cateNum = cat.cateNum
		AND		per.hall_id = hall.hall_id
		AND		pla.place_num = hall.place_num
		AND 	cat.category LIKE '${category}'
		<if test="mDev!=null">AND cat.mDev LIKE '${mDev}'</if>
		<if test="sDev!=null">AND cat.sDev LIKE '${sDev}'</if>
		<if test="keyword != null">AND perf_title LIKE '%${keyword}%' </if>
	</select>
	<!--출력할 스토어상품 갯수 가져오기 -->
	<select id="storeProductCnt" resultType="int">
		SELECT COUNT(*)
		FROM perDisc per, category cat
		WHERE per.cateNum = cat.cateNum
		AND cat.category LIKE '${category}'
		<if test="mDev!=null">AND cat.mDev LIKE '${mDev}'</if>
		<if test="sDev!=null">AND cat.sDev LIKE '${sDev}'</if>
		<if test="keyword!=null">AND per.disc_title LIKE '%${keyword}%'</if>
	</select>
	<!--공연상품 출력 -->
	<select id="perProduct" resultType="spring.project.tcat.VO.TcatPerformanceVO">
		SELECT		*
		FROM(
				SELECT  per.per_id, per.perf_title, per.cateNum, per.startDate,
						per.endDate, per.hall_id, per.first_grade, per.per_step,
						per.remain_round, per.possible_age,
						cat.category, cat.mDev, cat.sDev,
						hall.hall_name, hall.place_num, hall.VIP_seatPrice, hall.R_seatPrice,
						hall.S_seatPrice, hall.A_seatPrice, hall.B_seatPrice,
						hall.VIP_seat, hall.R_seat, hall.S_seat, hall.A_seat, hall.B_seat,
						pla.province, pla.city, pla.gu, pla.address, rownum rNum
				FROM 	performanceInfo per, category cat, hallInfo hall, place pla 
				WHERE 	per.cateNum = cat.cateNum
				AND		per.hall_id = hall.hall_id
				AND		pla.place_num = hall.place_num
				AND 	cat.category LIKE '${category}'
				<if test="mDev!=null">AND cat.mDev LIKE '${mDev}'</if>
				<if test="sDev!=null">AND cat.sDev LIKE '${sDev}'</if>
				<if test="keyword != null">AND perf_title LIKE '%${keyword}%'</if>
		)WHERE rNum &gt;= #{start} AND rNum &lt;=#{end}
	</select>
	<!--스토어 상품 출력 -->
	<select id="storeProduct" resultType="spring.project.tcat.VO.TcatPerDiscVO">
		SELECT *
		FROM(
			SELECT 
				per.disc_code, per.disc_title, per.disc_price,
			    per.disc_image, per.disc_con, per.cateNum,
			    per.first_grade, per.disc_step, per.disc_count,
			    cat.category, cat.mDev, cat.sDev, rownum rNum
			FROM perDisc per JOIN category	cat ON per.cateNum = cat.cateNum
		<where>
			cat.category LIKE '${category}'
			<if test="mDev!=null">AND cat.mDev LIKE '${mDev}'</if>
			<if test="sDev!=null">AND cat.sDev LIKE '${sDev}'</if>
			<if test="keyword!=null">AND per.disc_title LIKE '%${keyword}%'</if>
		</where>
		)WHERE rNum &gt;= #{start} AND rNum &lt;=#{end}
	</select>
	<!--공연상품 정보출력 1건  -->
	<select id="productDetail_perf" resultType="spring.project.tcat.VO.TcatPerformanceVO">
		SELECT  per.per_id, per.perf_title, per.cateNum, per.startDate,
				per.endDate, per.hall_id, per.first_grade, per.per_step,
				per.remain_round, per.possible_age,
				cat.category, cat.mDev, cat.sDev,
				hall.hall_name, hall.place_num, hall.VIP_seatPrice, hall.R_seatPrice,
				hall.S_seatPrice, hall.A_seatPrice, hall.B_seatPrice,
				hall.VIP_seat, hall.R_seat, hall.S_seat, hall.A_seat, hall.B_seat,
				pla.province, pla.city, pla.gu, pla.address,
				det.detail_num, det.refNum, det.per_ex, det.Detail_Image detail_image			
		FROM 	performanceInfo per, category cat, hallInfo hall, place pla, DetailPage det
		WHERE 	per.cateNum = cat.cateNum
		AND		per.hall_id = hall.hall_id
		AND		pla.place_num = hall.place_num
		AND		per.detail_num = det.detail_num
		AND 	per.per_id = #{_parameter}
	</select>
	<!--스토어상품 정보출력 1건  -->
	<select id="productDetail_store" resultType="spring.project.tcat.VO.TcatPerDiscVO">
		SELECT 
				per.disc_code, per.disc_title, per.disc_price,
			    per.disc_image, per.disc_con, per.cateNum,
			    per.first_grade, per.disc_step, per.disc_count,
			    cat.category, cat.mDev, cat.sDev
		FROM 	perDisc per JOIN category	cat ON per.cateNum = cat.cateNum
		WHERE 	per.disc_code = ${_parameter}
	</select>
	<!--예매목록 갯수  -->
	<select id="orderListCnt" resultType="int">
		SELECT 	COUNT(*)
		FROM	Ticketing 		tic
		JOIN	delevaryInfo 	del		ON tic.del_num = del.del_num
		JOIN	sale			s		ON tic.sale_div = s.sale_div
		JOIN	performanceInfo per		ON tic.per_id = per.per_id
		JOIN	category		cat		ON per.cateNum = cat.cateNum
		WHERE	1=1
			<if test="ticket_step!=null">AND tic.ticket_step LIKE '${ticket_step}'</if>
			<if test="mDev!=null">AND cat.mDev LIKE '${mDev}'</if>
			<if test="sDev!=null">AND cat.sDev LIKE '${sDev}'</if>
			<if test="keyword!=null">
				<choose >
					<when test="searchCondition=ticket_num">AND tic.ticket_num LIKE '${keyword}'</when>
					<when test="searchCondition=member_id">AND tic.member_id LIKE '%${keyword}%'</when>
					<when test="searchCondition=perf_title">AND per.perf_title LIKE '%${keyword}%'</when>
					<when test="searchCondition=del_name">AND del.del_name LIKE '%${keyword}%'</when>
					<when test="searchCondition=del_addr">AND del.del_addr LIKE '%${keyword}%'</when>
					<when test="searchCondition=del_hp">AND del.del_hp LIKE '%${keyword}%'</when>
					<otherwise>
						AND(
							tic.ticket_num LIKE '${keyword}'
							OR tic.member_id LIKE '%${keyword}%'
							OR per.perf_title LIKE '%${keyword}%'
							OR del.del_name LIKE '%${keyword}%'
							OR del.del_addr LIKE '%${keyword}%'
							OR del.del_hp LIKE '%${keyword}%')
					</otherwise>
				</choose>
			</if>
	</select>
	<!--주문목록 가져오기  -->
	<select id="orderList" resultType="spring.project.tcat.VO.TcatTicketingVO">
		SELECT *
		FROM(
			SELECT 		tic.ticket_num, tic.member_id, tic.per_id, tic.ticet_date,tic.round,
    					tic.seat_type, tic.seat_num, tic.sale_div, tic.del_num, tic.ticket_step,
 						s.sale_rate, del.del_name, del.del_addr, del.del_hp,
 						cat.category, cat.mDev, cat.sDev,
 						per.perf_title, rownum rNum
			FROM		Ticketing 		tic
			JOIN		delevaryInfo 	del		ON tic.del_num = del.del_num
			JOIN		sale			s		ON tic.sale_div = s.sale_div
			JOIN		performanceInfo per		ON tic.per_id = per.per_id
			JOIN		category		cat		ON per.cateNum = cat.cateNum
			WHERE	1=1
			<if test="ticket_step!=null">AND tic.ticket_step LIKE '${ticket_step}'</if>
			<if test="mDev!=null">AND cat.mDev LIKE '${mDev}'</if>
			<if test="sDev!=null">AND cat.sDev LIKE '${sDev}'</if>
			<if test="keyword!=null">
				<choose >
					<when test="searchCondition=ticket_num">AND tic.ticket_num LIKE '${keyword}'</when>
					<when test="searchCondition=member_id">AND tic.member_id LIKE '%${keyword}%'</when>
					<when test="searchCondition=perf_title">AND per.perf_title LIKE '%${keyword}%'</when>
					<when test="searchCondition=del_name">AND del.del_name LIKE '%${keyword}%'</when>
					<when test="searchCondition=del_addr">AND del.del_addr LIKE '%${keyword}%'</when>
					<when test="searchCondition=del_hp">AND del.del_hp LIKE '%${keyword}%'</when>
					<otherwise>
						AND(
							tic.ticket_num LIKE '${keyword}'
							OR tic.member_id LIKE '%${keyword}%'
							OR per.perf_title LIKE '%${keyword}%'
							OR del.del_name LIKE '%${keyword}%'
							OR del.del_addr LIKE '%${keyword}%'
							OR del.del_hp LIKE '%${keyword}%')
					</otherwise>
				</choose>
			</if>
		)WHERE rNum &gt;= #{start} AND rNum &lt;=#{end}
	</select>
	<!--스토어 주문 갯수  -->
	<select id="orderList_storeCnt" resultType="int">
		SELECT 	COUNT(*)
		FROM	DiscBuy 		dis
		JOIN	delevaryInfo 	del		ON dis.del_num = del.del_num
		JOIN	sale			s		ON dis.sale_div = s.sale_div
		JOIN	perDisc 		per		ON dis.disc_code = per.disc_code
		JOIN	category		cat		ON per.cateNum = cat.cateNum
		WHERE	1=1
			<if test="disc_buyStep!=null">AND dis.disc_buyStep LIKE '${disc_buyStep}'</if>
			<if test="mDev!=null">AND cat.mDev LIKE '${mDev}'</if>
			<if test="sDev!=null">AND cat.sDev LIKE '${sDev}'</if>
			<if test="keyword!=null">
				<choose >
					<when test="searchCondition=='del_num'">AND del.del_num LIKE '${keyword}'</when>
					<when test="searchCondition=='member_id'">AND dis.member_id LIKE '%${keyword}%'</when>
					<when test="searchCondition=='disc_title'">AND per.disc_title LIKE '%${keyword}%'</when>
					<when test="searchCondition=='del_name'">AND del.del_name LIKE '%${keyword}%'</when>
					<when test="searchCondition=='del_addr'">AND del.del_addr LIKE '%${keyword}%'</when>
					<when test="searchCondition=='del_hp'">AND del.del_hp LIKE '%${keyword}%'</when>
					<otherwise>
						AND(
							del.del_num LIKE '${keyword}'
							OR dis.member_id LIKE '%${keyword}%'
							OR per.disc_title LIKE '%${keyword}%'
							OR del.del_name LIKE '%${keyword}%'
							OR del.del_addr LIKE '%${keyword}%'
							OR del.del_hp LIKE '%${keyword}%')
					</otherwise>
				</choose>
			</if>
	</select>
	<!--스토어 주문 리스트  -->
	<select id="orderList_store" resultType="spring.project.tcat.VO.TcatDiscBuyVO">
	SELECT *
		FROM(
			SELECT 		dis.disc_num,dis.del_num,
					  	dis.disc_buyDate,dis.disc_code,dis.member_id,
					    dis.disc_buyStep,  dis.sale_div, s.sale_rate,
					 	del.del_name, del.del_addr,del.del_hp,
					 	cat.category, cat.mDev,cat.sDev,
					 	per.disc_title, rownum rNum
			FROM	DiscBuy 		dis
			JOIN	delevaryInfo 	del		ON dis.del_num = del.del_num
			JOIN	sale			s		ON dis.sale_div = s.sale_div
			JOIN	perDisc per		ON 		dis.disc_code = per.disc_code
			JOIN	category		cat		ON per.cateNum = cat.cateNum
			WHERE	1=1
			<if test="disc_buyStep!=null">AND dis.disc_buyStep LIKE '${disc_buyStep}'</if>
			<if test="mDev!=null">AND cat.mDev LIKE '${mDev}'</if>
			<if test="sDev!=null">AND cat.sDev LIKE '${sDev}'</if>
			<if test="keyword!=null">
				<choose >
					<when test="searchCondition=='del_num'">AND del.del_num LIKE '${keyword}'</when>
					<when test="searchCondition=='member_id'">AND dis.member_id LIKE '%${keyword}%'</when>
					<when test="searchCondition=='disc_title'">AND per.disc_title LIKE '%${keyword}%'</when>
					<when test="searchCondition=='del_name'">AND del.del_name LIKE '%${keyword}%'</when>
					<when test="searchCondition=='del_addr'">AND del.del_addr LIKE '%${keyword}%'</when>
					<when test="searchCondition=='del_hp'">AND del.del_hp LIKE '%${keyword}%'</when>
					<otherwise>
						AND(
							del.del_num LIKE '${keyword}'
							OR dis.member_id LIKE '%${keyword}%'
							OR per.disc_title LIKE '%${keyword}%'
							OR del.del_name LIKE '%${keyword}%'
							OR del.del_addr LIKE '%${keyword}%'
							OR del.del_hp LIKE '%${keyword}%'
							)
					</otherwise>
				</choose>
			</if>
		)WHERE rNum &gt;= #{start} AND rNum &lt;=#{end}
	</select>
	
	
<!--/////////////////////////////// 18.01.16 명훈 끝/////////////////////////////////////////////////-->
	
	
<!--/////////////////////////////// 18.01.17 명훈 추후통합 /////////////////////////////////////////////////-->
	<!--공연 판매량 랭크 수량  -->
	<select id="getProductRank_perfCnt" resultType="int">
	SELECT 	COUNT(*) 
	FROM(
			SELECT 	per.per_id,COUNT(ticket_num) saleCnt
			FROM 	performanceInfo per 
			JOIN 	Ticketing tic
			ON  	per.per_id = tic.per_id
			WHERE 	tic.ticket_step = 5
			GROUP   BY  per.per_id
			ORDER 	BY 	saleCnt desc
		)
	</select>
	<select id="productRank_perf" resultType="spring.project.tcat.VO.ProductRankVO">
	SELECT * 
	FROM(
			SELECT 	per_id, sellCnt,perf_title, rownum rNum 
			FROM(
					SELECT 	per.per_id, COUNT(ticket_num) sellCnt, per.perf_title
					FROM 	performanceInfo per 
					JOIN 	Ticketing tic
					ON  	per.per_id = tic.per_id
					WHERE 	tic.ticket_step = 5
					GROUP   BY  per.per_id, per.perf_title
					ORDER 	BY 	sellCnt desc
				)
		)
	WHERE rNum &gt;= 1 AND rNum &lt;=#{_parameter}
	</select>
	
	<!--스토어 랭크 총갯수 -->
	<select id="getProductRank_storeCnt" resultType="int">
	SELECT COUNT(*) 
	FROM(
			SELECT 	per.disc_code,COUNT(*) sellCnt, per.disc_title
            FROM 	perDisc per 
            JOIN 	DiscBuy dis
            ON  	per.disc_code = dis.disc_code
            WHERE 	dis.disc_buyStep =5
            GROUP   BY  per.disc_code, per.disc_title
            ORDER 	BY 	sellCnt desc
		)
	</select>
	<!--스토어 판매분석  -->
	<select id="productRank_store" resultType="spring.project.tcat.VO.ProductRankVO">
		SELECT * 
		FROM( 
		        SELECT disc_code, sellCnt,disc_title, rownum rNum 
		        FROM(
		                SELECT 	per.disc_code,COUNT(*) sellCnt, per.disc_title
		                FROM 	perDisc per 
		                JOIN 	DiscBuy dis
		                ON  	per.disc_code = dis.disc_code
		                WHERE 	dis.disc_buyStep =5
		                GROUP   BY  per.disc_code, per.disc_title
		                ORDER 	BY 	sellCnt desc
		            )
		        )
		WHERE rNum &gt;= 1 AND rNum &lt;=#{_parameter}
	</select>
	
	<!--카테고리 판매 분석  -->
	<!--중분류 판매 랭크  -->
	<select id="mDevRank" resultType="spring.project.tcat.VO.ProductRankVO">
	SELECT mDev,sellCnt,rowNum rNum
	FROM(
		SELECT 	cat.mDev mDev ,COUNT(*) sellCnt
		FROM 	performanceInfo per 
		JOIN 	Ticketing tic
		ON  	per.per_id = tic.per_id
		JOIN    category cat
		ON      cat.cateNum = per.cateNum
		WHERE 	tic.ticket_step =5
		GROUP   BY  cat.mDev
		ORDER 	BY 	sellCnt desc
	)
	</select>
	<!--소분류 판매 랭크 -->
	<select id="sDevRank" resultType="spring.project.tcat.VO.ProductRankVO">
		SELECT 	cat.sDev sDev ,COUNT(*) sellCnt
		FROM 	performanceInfo per 
		JOIN 	Ticketing tic
		ON  	per.per_id = tic.per_id
		JOIN    category cat
		ON      cat.cateNum = per.cateNum
		WHERE 	tic.ticket_step =5
		AND     mDev = #{_parameter}
		GROUP   BY  cat.sDev
		ORDER 	BY 	sellCnt desc
	</select>
	
	<!--스토어 중분류 분석  -->
	<select id="mDevRank_store" resultType="spring.project.tcat.VO.ProductRankVO">
		SELECT  mDev,sellCnt,rownum rNum
		FROM(
		    SELECT 	cat.mDev, COUNT(*) sellCnt
		    FROM 	perDisc per 
		    JOIN 	DiscBuy dis
		    ON  	per.disc_code = dis.disc_code
		    JOIN    category cat
		    ON      cat.cateNum = per.cateNum
		    WHERE 	dis.disc_buyStep = 5
		    GROUP   BY  cat.mDev
		    ORDER 	BY 	sellCnt desc
		)
	</select>
	<!--소분류 판매 랭크 -->
	<select id="sDevRank_store" resultType="spring.project.tcat.VO.ProductRankVO">
		    SELECT 	cat.sDev, COUNT(*) sellCnt
		    FROM 	perDisc per 
		    JOIN 	DiscBuy dis
		    ON  	per.disc_code = dis.disc_code
		    JOIN    category cat
		    ON      cat.cateNum = per.cateNum
		    WHERE 	dis.disc_buyStep = 5
		    AND     mDev = #{_parameter}
		    GROUP   BY  cat.sDev
		    ORDER 	BY 	sellCnt desc
	</select>
	
	
	
	<!--공연 환불 랭크 수량  -->
	<select id="returnRank_perfCnt" resultType="int">
	SELECT 	COUNT(*) 
	FROM(
			SELECT 	per.per_id,COUNT(ticket_num) saleCnt
			FROM 	performanceInfo per 
			JOIN 	Ticketing tic
			ON  	per.per_id = tic.per_id
			WHERE 	tic.ticket_step = 7
			GROUP   BY  per.per_id
			ORDER 	BY 	saleCnt desc
		)
	</select>
	<select id="returnRank_perf" resultType="spring.project.tcat.VO.ProductRankVO">
	SELECT * 
	FROM(
			SELECT 	per_id, sellCnt,perf_title, rownum rNum 
			FROM(
					SELECT 	per.per_id, COUNT(ticket_num) sellCnt, per.perf_title
					FROM 	performanceInfo per 
					JOIN 	Ticketing tic
					ON  	per.per_id = tic.per_id
					WHERE 	tic.ticket_step = 7
					GROUP   BY  per.per_id, per.perf_title
					ORDER 	BY 	sellCnt desc
				)
		)
	WHERE rNum &gt;= 1 AND rNum &lt;=#{_parameter}
	</select>
	
	
	<!--스토어 랭크 총갯수 -->
	<select id="returnRank_storeCnt" resultType="int">
	SELECT COUNT(*) 
	FROM(
			SELECT 	per.disc_code,COUNT(*) sellCnt, per.disc_title
            FROM 	perDisc per 
            JOIN 	DiscBuy dis
            ON  	per.disc_code = dis.disc_code
            WHERE 	dis.disc_buyStep =7
            GROUP   BY  per.disc_code, per.disc_title
            ORDER 	BY 	sellCnt desc
		)
	</select>
	<!--스토어 판매분석  -->
	<select id="returnRank_store" resultType="spring.project.tcat.VO.ProductRankVO">
		SELECT * 
		FROM( 
		        SELECT disc_code, sellCnt,disc_title, rownum rNum 
		        FROM(
		                SELECT 	per.disc_code,COUNT(*) sellCnt, per.disc_title
		                FROM 	perDisc per 
		                JOIN 	DiscBuy dis
		                ON  	per.disc_code = dis.disc_code
		                WHERE 	dis.disc_buyStep =7
		                GROUP   BY  per.disc_code, per.disc_title
		                ORDER 	BY 	sellCnt desc
		            )
		        )
		WHERE rNum &gt;= 1 AND rNum &lt;=#{_parameter}
	</select>
	
	
	<!--장바구니 랭크  cartRankCnt-->
	<select id="cartRankCnt" resultType="int">
	SELECT  COUNT(*)
	FROM    (
	            SELECT  per.disc_code, COUNT(*) sellCnt, per.disc_title
	            FROM    perDisc per
	            JOIN    cart    car
	            ON      per.disc_code = car.disc_code
	            GROUP   BY  per.disc_code, per.disc_title
	            ORDER   BY  sellCnt desc
	        )
	</select>
	<select id="cartRank" resultType="spring.project.tcat.VO.ProductRankVO">
	SELECT * 
	FROM( 
		SELECT  disc_code, sellCnt, disc_title, rownum rNum
		FROM    (
		            SELECT  per.disc_code, COUNT(*) sellCnt, per.disc_title
		            FROM    perDisc per
		            JOIN    cart    car
		            ON      per.disc_code = car.disc_code
		            GROUP   BY  per.disc_code, per.disc_title
		            ORDER   BY  sellCnt desc
		        )
	         )
	WHERE rNum &gt;= 1 AND rNum &lt;=#{_parameter}
	</select>
	<!-- 위시리스트 -->
	<select id="wishListRank_perfCnt" resultType="int">
		SELECT	COUNT(*)
		FROM    (
		            SELECT  per.per_id,per.perf_title,COUNT(*) sellCnt
		            FROM    performanceInfo per
		            JOIN    wishList    wis
		            ON      per.per_id = wis.per_id
		            GROUP   BY  per.per_id, per.perf_title
		            ORDER   BY  sellCnt desc
		        )
			   
	</select>
	<select id="wishListRank_perf" resultType="spring.project.tcat.VO.ProductRankVO">
		SELECT * 
		FROM( 
				SELECT  per_id,perf_title,sellCnt,rownum rNum
				FROM    (
				            SELECT  per.per_id,per.perf_title,COUNT(*) sellCnt
				            FROM    performanceInfo per
				            JOIN    wishList    wis
				            ON      per.per_id = wis.per_id
				            GROUP   BY  per.per_id, per.perf_title
				            ORDER   BY  sellCnt desc
				        )
			   )
		WHERE rNum &gt;= 1 AND rNum &lt;=#{_parameter}
	</select>
	<!-- 위시리스트 스토어-->
	<select id="wishListRank_storeCnt" resultType="int">
		SELECT  COUNT(*)
		FROM    (       
		            SELECT  per.disc_code, per.disc_title,COUNT(*) sellCnt
		            FROM    perDisc per
		            JOIN    wishList    wis
		            ON      per.disc_code = wis.disc_code
		            GROUP   BY  per.disc_code, per.disc_title
		            ORDER   BY  sellCnt desc
		        )
	</select>
	<select id="wishListRank_store" resultType="spring.project.tcat.VO.ProductRankVO">
		SELECT * 
		FROM( 
				SELECT  disc_code,disc_title,sellCnt,rownum rNum
				FROM    (       
				            SELECT  per.disc_code, per.disc_title,COUNT(*) sellCnt
				            FROM    perDisc per
				            JOIN    wishList    wis
				            ON      per.disc_code = wis.disc_code
				            GROUP   BY  per.disc_code, per.disc_title
				            ORDER   BY  sellCnt desc
				        )
		  )
		WHERE rNum &gt;= 1 AND rNum &lt;=#{_parameter}
	</select>
<!--/////////////////////////////// 18.01. 명훈 추후통합 /////////////////////////////////////////////////-->


   
 
	<!-- 18.01.11 태성 수정 -->
	<!-- 상품 개수(스토어 제외) -->
	<select id="getCate" resultType="int" parameterType="String">
		select count(*) from
		performanceInfo per,
		category ca
		where
		per.CATENUM=ca.CATENUM
		and MDEV=#{Hcnt}
		<choose>
			<when test="sDev==1">
				AND per_id LIKE '${keyword}'
			</when>
			<when test="sDev==2">
				AND perf_title LIKE '%${keyword}%'
			</when>
			<when test="sDev==3">
				AND per_step LIKE '${keyword}'
			</when>
			<otherwise></otherwise>
		</choose>
		<if test="mDev != null">
			AND MDEV LIKE #{Hcnt}
		</if>
	</select>

	<!-- 상품 개수(스토어만) -->
	<select id="getStore" resultType="int" parameterType="String">
		select count(*)
		from perDisc perdi, category ca
		where
		perdi.CATENUM=ca.CATENUM and
		category=#{Hcnt}
		<choose>
			<when test="sDev==1">

				AND disc_code LIKE '${keyword}'
			</when>
			<when test="sDev==2">

				AND disc_title LIKE '%${keyword}%'
			</when>
			<when test="sDev==3">
				AND disc_step LIKE '${keyword}'
			</when>
			<otherwise></otherwise>
		</choose>
		<if test="mDev != null">
			AND category LIKE #{Hcnt}
		</if>
	</select>

	<!-- 상품 진열(스토어제외) -->
	<select id="musiList" resultType="spring.project.tcat.VO.TcatPerformanceVO">
		  
        SELECT *                
        FROM (select per.per_id, per.perf_title, per.startDate,per.endDate,per.first_grade ,per.per_step,ca.CATEGORY,ROWNUM rnum
			from performanceInfo per,category ca
			where per.CATENUM=ca.CATENUM and MDEV=#{s}
			<choose>
			<when test="sDev==1">
				AND per_id LIKE '${keyword}'
			</when>
			<when test="sDev==2">
				AND perf_title LIKE '%${keyword}%'
			</when>
			<when test="sDev==3">
				AND per_step LIKE '${keyword}'
			</when>
			<otherwise></otherwise>
		</choose>
		<if test="mDev != null">
			AND MDEV LIKE #{s}
		</if>
			order by first_grade desc
			)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
		
	</select>

	<!-- 상품 진열(스토어만) -->
	<select id="storeList" resultType="spring.project.tcat.VO.TcatPerDiscVO">

		SELECT *
		FROM (select perD.disc_code, perD.disc_title, perD.disc_price,perD.disc_step,
		perD.cateNum, perD.first_grade ,ca.CATEGORY,ROWNUM rnum
		from perDisc perD,category ca
		where perD.CATENUM=ca.CATENUM and category=#{s}
		<choose>
			<when test="sDev==1">
				AND disc_code LIKE '${keyword}'
			</when>
			<when test="sDev==2">
				AND disc_title LIKE '%${keyword}%'
			</when>
			<when test="sDev==3">
				AND disc_step LIKE '${keyword}'
			</when>
			<otherwise></otherwise>
		</choose>
		<if test="mDev != null">
			AND category LIKE #{s}
		</if>
		order by first_grade desc
		)
		 <![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
    	]]>

	</select>



	<!-- 우선순위 변경(스토어 제외) -->
	<update id="Cfirst_grade" parameterType="java.util.Map">
		update performanceInfo
		set first_grade=#{first_grade} where per_id=#{id}
	</update>

	<!-- 우선순위 변경(스토어만) -->
	<update id="Sfirst_grade" parameterType="java.util.Map">
		update perDisc set
		first_grade=#{first_grade} where disc_code=#{disc_code}
	</update>
	
	<!-- 공연스텝 변경-->
	<update id="Cstep" parameterType="java.util.Map">
		update performanceInfo
		set per_step=#{per_step} where per_id=#{id}
	</update>

	<!-- 상품스텝 변경-->
	<update id="Sstep" parameterType="java.util.Map">
		update perDisc 
		set	disc_step=#{disc_step} where disc_code=#{disc_code}
	</update>

	<!-- 18.01.11 태성 수정끝 -->

	
	<!-- 18.01.12 태성 시작 -->
	
	<!-- 상품 개수(스토어만) -->
	<select id="stockStore" resultType="int" parameterType="String">
		select count(*)
		from perDisc perdi, category ca
		where
		perdi.CATENUM=ca.CATENUM and
		category=#{Hcnt}
		<choose>
			<when test="sDev==1">

				AND disc_code LIKE '${keyword}'
			</when>
			<when test="sDev==2">

				AND disc_title LIKE '%${keyword}%'
			</when>
			<when test="sDev==3">
				AND disc_step LIKE '${keyword}'
			</when>
			<otherwise></otherwise>
		</choose>
		<if test="mDev != null">
			AND category LIKE #{Hcnt}
		</if>
	</select>


	<!-- 상품 진열(스토어만) -->
	<select id="stockManageListstore" resultType="spring.project.tcat.VO.TcatPerDiscVO">
		   SELECT *           
       FROM (select perD.disc_code, perD.disc_title, perD.disc_price, perD.cateNum, perD.first_grade ,ca.mDev,ca.Sdev,perD.disc_count,perD.disc_step,ROWNUM rnum
			from perDisc perD,category ca
			where perD.CATENUM=ca.CATENUM and category=#{s}
			<choose>
			<when test="sDev==1">
				AND disc_code LIKE '${keyword}'
			</when>
			<when test="sDev==2">
				AND disc_title LIKE '%${keyword}%'
			</when>
			<when test="sDev==3">
				AND disc_step LIKE '${keyword}'
			</when>
			<otherwise></otherwise>
			</choose>
			<if test="mDev != null">
				AND category LIKE #{s}
			</if>
			order by first_grade desc
		)
		 <![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
    	]]>
	</select>
	<!-- //클릭시 개수 -->
	<select id="clickStockCnt" resultType="int">
		select * from
		perDisc per
		where per.disc_code = #{disc_code}
	</select>
	<!-- //클릭시 목록 출력 -->
	<select id="clickStockList" resultType="spring.project.tcat.VO.TcatPerDiscVO">
	  <![CDATA[
	   SELECT *           
       FROM (select perD.disc_code, perD.disc_title, perD.disc_price,perD.first_grade ,ca.mDev,ca.Sdev,perD.disc_count,ROWNUM rnum
			from perDisc perD,category ca
			where perD.CATENUM=ca.CATENUM and disc_code =#{disc_code}
			order by first_grade desc
			)
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	   <!-- //재고변경시 업데이트 -->
	<update id="updateStock" parameterType="spring.project.tcat.VO.TcatPerDiscVO">
		update perDisc set disc_count = #{disc_count} where disc_code = #{disc_code}
	</update>
	<!-- 18.01.12 태성 종료 -->

 <!-- 18.01.11 현석 수정  -->
      <select id="performanceCnt" resultType="int">
			select count(*) from(select p.per_id,p.perf_title,p.cateNum,c.category,c.mDev,c.sDev,p.perf_Image,p.startdate,p.enddate,p.hall_id,h.hall_name,p.first_grade,p.per_step,p.remain_round,p.possible_age
			    from performanceInfo p,category c,hallInfo h
			    where p.cateNum=c.cateNum and p.hall_id = h.hall_id and c.category='공연')
			    
		</select>
	
		<select id="performanceList" parameterType="java.util.Map" resultType="spring.project.tcat.VO.TcatPerformanceVO">
		<![CDATA[
			select * 
			from
			(
			    select p.per_id,p.perf_title,p.cateNum,p.R_seatPrice,p.VIP_seatPrice,p.S_seatPrice,p.A_seatPrice,p.B_seatPrice,c.category,c.mDev,c.sDev,p.perf_Image,p.startdate,p.enddate,p.hall_id,h.hall_name,p.first_grade,p.per_step,p.remain_round,p.possible_age,rownum rNum
			    from (select * from performanceInfo order by per_id desc) p,category c,hallInfo h
			    where p.cateNum=c.cateNum and p.hall_id = h.hall_id and c.category='공연'
			)
			where rNum>=#{start} and rNum <=#{end}
		]]>
		</select>
		
		<insert id="insertPerformance" parameterType="java.util.Map">
			insert into performanceInfo(per_id, perf_title, cateNum, perf_Image, startDate, endDate, hall_id, first_grade, per_step, remain_round, possible_age,detail_num,VIP_seatPrice,R_seatPrice,S_seatPrice,A_seatPrice,B_seatPrice)
			values(performanceInfo_SEQ.NEXTVAL,#{perf_title},#{cateNum},#{perf_Image},#{startDate},#{endDate},#{hall_id},#{first_grade},1,#{remain_round},#{possible_age},DetailPage_SEQ.NEXTVAL,#{VIP_seatPrice},#{R_seatPrice},#{S_seatPrice},#{A_seatPrice},#{B_seatPrice})
			
		</insert>
		
		<select id="perDiscCnt" resultType="int">
			select count(*) from(
			select p.disc_code,p.disc_title,p.disc_price,p.disc_image,p.disc_con,p.cateNum,
			        p.first_grade,p.disc_step,p.disc_count,c.category,c.mDev,c.sDev
			from perDisc p ,category c
			where p.CATENUM=c.CATENUM and c.CATEGORY='스토어' and p.DISC_STEP=1)
		</select>
		
		<select id="perDiscList" parameterType="java.util.Map" resultType="spring.project.tcat.VO.TcatPerDiscVO">
			<![CDATA[
			select * 
			from(
			    select p.disc_code,p.disc_title,p.disc_price,p.disc_image,p.disc_con,p.cateNum,
			            p.first_grade,p.disc_step,p.disc_count,c.category,c.mDev,c.sDev,rownum rNum
			    from (select * from perDisc order by disc_code desc) p ,category c
			    where p.CATENUM=c.CATENUM and c.CATEGORY='스토어' and p.DISC_STEP=1
			   
			)
			where rNum>=#{start} and rNum <=#{end}
			]]>
		</select>
		
		<insert id="insertStore" parameterType="spring.project.tcat.VO.TcatPerDiscVO">
			insert into perDisc(disc_code, disc_title, disc_price, disc_image, disc_con, cateNum, first_grade, disc_step, disc_count)
			values(perDisc_SEQ.NEXTVAL,#{disc_title},#{disc_price},#{disc_image},#{disc_con},#{cateNum},#{first_grade},#{disc_step},#{disc_count})
		</insert>
		
		<!-- 2018.01.14 -->
		<select id="cateList" resultType="spring.project.tcat.VO.CategoryVO">
			select * from category where category='공연'
		</select>
		
		<select id="HellList" resultType="spring.project.tcat.VO.SelectHellInfoVO">
			select hall_id,hall_name from hallInfo
		</select>
		
		<select id="cateListStore" resultType="spring.project.tcat.VO.CategoryVO">
			select * from category where category='스토어'
		</select>
		
		<select id="SearchDetail_num" resultType="int">
			select max(detail_num) from performanceInfo
		</select>
		
		<insert id="insertDetailP_DEFAULT" parameterType="int">
			insert into DetailPage(detail_num,refNum,per_ex,Detail_Image) values(#{detail_num},0,' ',' ')
		</insert>
		<!-- 2018-01-15 -->
		<select id="member_cnt" resultType="int">
			select count(*) from member
		</select>
		
		<select id="member_list" parameterType="java.util.Map" resultType="spring.project.tcat.VO.MemberVO">
			<![CDATA[
			select * from(
			select member_id, member_pwd, member_name, member_hp, member_addr, member_email, 
					member_gender, member_birth, point, lastDate, Rating, member_step,member_joindate, rownum rNum
			from (select * from member order by member_joindate desc))
			where rNum>=#{start} and rNum <=#{end}
			]]>
		</select>
		
		<select id="detailMember" parameterType="String" resultType="spring.project.tcat.VO.MemberVO">
			select * from member where member_id=#{member_id}
		</select>
		
		<update id="detailMember_update" parameterType="spring.project.tcat.VO.MemberVO">
			update member set member_pwd=#{member_pwd},member_hp=#{member_hp},member_email=#{member_email},
								member_name=#{member_name},Rating=#{Rating},point=#{point},member_addr=#{member_addr}
			where member_id=#{member_id}
		</update>
		
		<!-- 2018-01-16 -->
		<insert id="HostPlus" parameterType="java.util.Map">
			insert into host(host_id, host_pwd, host_name, host_Department, host_grade, host_email, host_phone, host_authority) 
					    values(#{host_id},#{host_pwd},#{host_name},#{host_Department},#{host_grade},#{host_email},#{host_phone},#{host_authority})
		</insert>
		
		<select id="HostIdCheack" parameterType="String" resultType="int">
			select count(*) from host where host_id=#{host_id}
		</select>
		
		<select id="HostMemberListCnt" resultType="int">
			select count(*) from host
		</select>
		
		<select id="HostMemberList" parameterType="java.util.Map" resultType="spring.project.tcat.VO.HostVO">
			<![CDATA[
			select * from
			(
			select host_id, host_pwd, host_name, host_Department, host_grade, host_email, host_phone, host_authority,rownum rNum
			from host
			)
			where rNum>=#{start} and rNum <=#{end}
			]]>
		</select>
		
		<delete id="deleteHost" parameterType="String">
			delete host where host_id=#{host_id}		
		</delete>		
      <!-- 18.01.11 현석 수정 끝  -->
      
         <!-- 18.01.11 영민 수정  -->
     <!-- 작업중 -->
     <!-- 핫캇테고리 출력-->
     <select id="hotArticleCnt" resultType="int" >
    	SELECT 
		Count(*)
		FROM 
		performanceInfo
		where per_step='2'
    </select>
    <!-- 카테고리 갯수 -->
    <select id="hotNoArticleCnt" resultType="int" >
    	select
				count(*)
				from
				category c join
 					(select
 						p.per_id,
 						p.per_step,
 						p.perf_title,
 						p.cateNum,
 						s.num
 					from
 						performanceInfo p join 
  						(select
    					per_id,
    					num
    					from
    				(
        				select per_id, count(ticket_num) as num
        				from Ticketing
        				group by per_id
        				order by count(ticket_num) desc
    				)
        				 ) s
    					on
    					p.per_id=s.per_id
    					
    					<if test="step ==0">
    					where p.per_step='2'
    					</if>
    					<if test="step ==1">
    					where p.per_step='1'
    					</if>
    					) f
    					on 
    					c.cateNum=f.cateNum
    					<if test="mDev != null">
           				AND c.mDev LIKE '${mDev}'
        				</if>
    					
				        <!-- <choose>
				           <when test="sDev==1">
				              AND p.per_id LIKE '${keyword}'
				           </when>
				           <when test="sDev==2">
				              AND p.perf_title LIKE '%${keyword}%'
				           </when>
				           <otherwise></otherwise>
				        </choose> -->
    					
    </select>
    <!-- 필요한 컬럼 -->
 	<resultMap id="hotListMap" type="spring.project.tcat.VO.TcatPerformanceVO">						
	   	<id property="per_id" column="per_id"/>
	   	<result property="place_num" column="place_num"/>
  	 </resultMap>
	   <!-- hot메뉴  많이 예매된 per_id 5명 출력-->
	  <select id="hotList" resultMap="hotListMap">
	   	<![CDATA[ 
	   		select
            p.per_step as per_step,
            t.per_id as per_id,
            t.place_num as place_num
            from
            performanceInfo p join
            (select * from(
			select per_id, count(ticket_num) as place_num
			from Ticketing
			group by per_id
			order by count(ticket_num) desc
			)
			where rownum<=4) t
            on 
            p.per_id=t.per_id
            
	   	]]>
	   </select>
	   <!-- hotUpdate -->
	   <update id="hotUpdate" parameterType="int">
		update performanceInfo set per_step='2'  where per_id=#{per_id}
		</update>
	
		<!-- hotLists -->
		
		<select id="hotLast" parameterType="java.util.Map" resultType="spring.project.tcat.VO.TcatPerformanceVO">
		<![CDATA[
				
			select *
			from(
				select
				f.per_id as per_id,
				f.perf_title as perf_title,
				f.per_step as per_step,
				f.num as gu,
				c.mdev as mDev,
				c.sdev as sDev,
				rownum rNum
				from
				category c join
 					(select
 						p.per_id,
 						p.per_step,
 						p.perf_title,
 						p.cateNum,
 						s.num
 					from
 						performanceInfo p join 
  						(select
    					per_id,
    					num
    					from
    				(
        				select per_id, count(ticket_num) as num
        				from Ticketing
        				group by per_id
        				order by count(ticket_num) desc
    				)
    				]]>
        				 ) s
    					on
    					p.per_id=s.per_id
    					<if test="step ==0">
    					where p.per_step='2'
    					</if>
    					<if test="step ==1">
    					where p.per_step='1'
    					</if>
    					) f
    					on 
    					c.cateNum=f.cateNum
    					<if test="mDev != null">
           				AND c.mDev LIKE '${mDev}'
        				</if>
    					)
    					<if test="step ==1">
    					<![CDATA[
    					where rNum>=#{start} and rNum <=#{end}
    					]]>
    					</if>
    					order by gu desc
    					
    				
	</select>
	<!-- 핫리스트 내리기 -->
	<update id="hotDeleteList" parameterType="int">
		update performanceInfo set per_step='1' where per_id=#{per_id}
	</update>
	
	<!-- 핫리스트 올리기 -->
	<update id="hotUpdateList" parameterType="int">
		update performanceInfo set per_step='2' where per_id=#{per_id}
	</update>

     <!-- 18.01.11 영민 수정끝  -->
     
<!-- 18.01.11 동금 수정  -->
     
	<!-- 상품갯수구하기 -->
	<select id="getPerfoCnt" resultType="int" parameterType="java.util.Map">
		
		SELECT count(*)
   	    FROM performanceInfo per, place pla, category c, hallInfo h 
 		WHERE per.hall_id = h.hall_id 
 		  AND h.place_Num = pla.place_Num 
 		  AND per.cateNum = c.cateNum
     	  AND NOT(per.per_step LIKE '4')
     	<if test="mDev != null">
     		AND c.mDev LIKE '${mDev}'
     	</if>
  		<choose>
  			<when test="sDev==1">
  				AND per.per_id LIKE '${keyword}'
  			</when>
  			<when test="sDev==2">
  				AND per.perf_title LIKE '%${keyword}%'
  			</when>
  			<when test="sDev==3">
  				AND per.cateNum LIKE '%${keyword}%'
  			</when>
  			<when test="sDev==4">
  				AND pla.province LIKE '%${keyword}%'
  			</when>
  			<when test="sDev==5">
  				AND pla.address LIKE '%${keyword}%'
  			</when>
  			<otherwise></otherwise>
  		</choose>
	</select>
	
	<resultMap id="perfolist" type="spring.project.tcat.VO.TcatPerformanceVO">
		<id property="per_id" column="per_id" />
		<result property="perf_Image"  column="perf_Image" />
		<result property="perf_title"  column="perf_title" />
		<result property="category"  column="category" />
		<result property="mDev" column="mDev" />
		<result property="startDate"  column="startDate" />
		<result property="place_num"  column="place_num" />
		<result property="province"  column="province" />
		<result property="city"  column="city" />
		<result property="gu"  column="gu" />
		<result property="address"  column="address" />
		<result property="hall_name" column="hall_name" />
	</resultMap>
	
	<!-- parameterType="spring.project.tcat.VO.TcatPerformanceVO"   resultMap="perfolist" -->
<!-- 	상품전체리스트 -->
<select id="getPerfoDeleteList" parameterType="java.util.Map" resultMap="perfolist">
	SELECT b.per_id per_id, b.perf_title perf_title, b.perf_Image perf_Image, 
       	   b.startDate startDate, b.per_step per_step, b.hall_id hall_id, 
       	   b.hall_name hall_name, b.place_Num place_Num, b.cateNum cateNum, 
       	   b.province province, b.city city, b.gu gu, b.address address, 
           c.category category, c.mDev mDev, c.sDev sDev       
	FROM
        (SELECT a.per_id per_id, a.perf_title perf_title, a.perf_Image perf_Image, 
                a.startDate startDate, a.per_step per_step, a.hall_id hall_id, 
                a.hall_name hall_name, a.place_Num place_Num, a.cateNum cateNum, 
                p.province province, p.city city, p.gu gu, p.address address
          FROM 
             (SELECT p.per_id per_id, p.perf_title perf_title, p.perf_Image perf_Image, p.startDate startDate, 
                     p.per_step per_step, p.cateNum cateNum, p.hall_id hall_id, h.hall_name hall_name, 
                     h.place_Num place_Num
                FROM performanceInfo p JOIN hallInfo h
                  ON p.hall_id = h.hall_id) a JOIN place p
              ON a.place_Num = p.place_Num) b JOIN category c
       ON b.cateNum = c.cateNum
       WHERE
        NOT(per_step LIKE '4')
	<choose>
		<when test="sDev==1">
			AND per_id LIKE '${keyword}'
		</when>
		<when test="sDev==2">
			AND perf_title LIKE '%${keyword}%'
		</when>
		<when test="sDev==3">
			AND cateNum LIKE '%${keyword}%'
		</when>
		<when test="sDev==4">
			AND province LIKE '%${keyword}%'
		</when>
		<when test="sDev==5">
			AND address LIKE '%${keyword}%'
		</when> 
		<otherwise></otherwise>
	</choose>
       	<if test="mDev != null">
     		AND mDev LIKE '${mDev}'
     	</if> 
		  
</select>

	<!-- 스토어상품삭제(갯수구하기) -->
	<select id="getStoreCnt" resultType="int">
		SELECT count(*)
	  	FROM perDisc p JOIN category c
	  	on p.cateNum = c.cateNum
	  	 
		<if test="category != null">
     		AND c.category LIKE '${category}'
     	</if>
  		<choose>
  			<when test="cDev==1">
  				AND p.disc_code LIKE '${keyword}'
  			</when>
  			<when test="cDev==2">
  				AND p.disc_title LIKE '%${keyword}%'
  			</when>
  			<when test="cDev==3">
  				AND p.disc_price LIKE '%${keyword}%'
  			</when>
  			<when test="cDev==4">
  				AND c.mDev LIKE '%${keyword}%'
  			</when>
  			<when test="cDev==5">
  				AND c.sDev LIKE '%${keyword}%'
  			</when>  
  			<otherwise></otherwise>
  		</choose>
	
	</select>
	
	<!-- 스토어상품삭제(리스트불러오기) -->
	<select id="getStoreDeleteList" parameterType="java.util.Map" resultType="spring.project.tcat.VO.TcatPerDiscVO">
		SELECT p.disc_code disc_code, p.disc_title disc_title, p.disc_image disc_image, 
			   p.disc_con disc_con, p.disc_price disc_price, p.cateNum cateNum, 
			   p.disc_count disc_count, c.category category, c.mDev mDev, c.sDev sDev, 
			   p.disc_step disc_step
		FROM perDisc p JOIN category c
		on p.cateNum = c.cateNum
		WHERE
          NOT(disc_step LIKE '4')
		<if test="category != null">
	     		AND c.category LIKE '${category}'
	   	</if>
		<choose>
  			<when test="cDev==1">
  				AND p.disc_code LIKE '${keyword}'
  			</when>
  			<when test="cDev==2">
  				AND p.disc_title LIKE '%${keyword}%'
  			</when>
  			<when test="cDev==3">
  				AND p.disc_price LIKE '%${keyword}%'
  			</when>
  			<when test="cDev==4">
  				AND c.mDev LIKE '%${keyword}%'
  			</when>
  			<when test="cDev==5">
  				AND c.sDev LIKE '%${keyword}%'
  			</when>  
  			<otherwise></otherwise>
  		</choose>
	
	
	</select>
	
	
    <!-- 상품삭제 처리페이지 -->
 	<update id="registerDel" parameterType="int">
		UPDATE performanceInfo set per_step = 4 WHERE per_id = #{_parameter}
	</update> 
	
	<update id="storeRegisterDel" parameterType="int">
		UPDATE perDisc set disc_step = 4 WHERE disc_code = #{_parameter}
	</update> 
	
	
	<!-- 스토어상품갯수불러오기 -->
	<select id="storeOutOfCnt" resultType="int">
		SELECT count(*)
	  	FROM perDisc p JOIN category c
	  	on p.cateNum = c.cateNum
	  	 
		<if test="category != null">
     		AND c.category LIKE '${category}'
     	</if>
  		<choose>
  			<when test="cDev==1">
  				AND p.disc_code LIKE '${keyword}'
  			</when>
  			<when test="cDev==2">
  				AND p.disc_title LIKE '%${keyword}%'
  			</when>
  			<when test="cDev==3">
  				AND p.disc_price LIKE '%${keyword}%'
  			</when>
  			<when test="cDev==4">
  				AND c.mDev LIKE '%${keyword}%'
  			</when>
  			<when test="cDev==5">
  				AND c.sDev LIKE '%${keyword}%'
  			</when>  
  			<otherwise></otherwise>
  		</choose>
	
	</select>
	
	<!-- 스토어상품리스트불러오기 -->
	<select id="storeOutOfList" parameterType="java.util.Map" resultType="spring.project.tcat.VO.TcatPerDiscVO">
		SELECT p.disc_code disc_code, p.disc_title disc_title, p.disc_image disc_image, 
			   p.disc_con disc_con, p.disc_price disc_price, p.cateNum cateNum, 
			   p.disc_count disc_count, c.category category, c.mDev mDev, c.sDev sDev, 
			   p.disc_step disc_step
		FROM perDisc p JOIN category c
		on p.cateNum = c.cateNum
		WHERE
          NOT(disc_step LIKE '4')
		<if test="category != null">
	     		AND c.category LIKE '${category}'
	   	</if>
		<choose>
  			<when test="cDev==1">
  				AND p.disc_code LIKE '${keyword}'
  			</when>
  			<when test="cDev==2">
  				AND p.disc_title LIKE '%${keyword}%'
  			</when>
  			<when test="cDev==3">
  				AND p.disc_price LIKE '%${keyword}%'
  			</when>
  			<when test="cDev==4">
  				AND c.mDev LIKE '%${keyword}%'
  			</when>
  			<when test="cDev==5">
  				AND c.sDev LIKE '%${keyword}%'
  			</when>  
  			<otherwise></otherwise>
  		</choose>
	
	
	</select>
	
	<!-- 스토어판매중단 -->
	<update id="storeSaleStop" parameterType="int">
		UPDATE perDisc set disc_step = 3 WHERE disc_code = #{_parameter}
	</update>
	
	<update id="storeSaleStopRelease" parameterType="int">
		UPDATE perDisc set disc_step = 1 WHERE disc_code = #{_parameter}
	</update>
	
    <update id="storediscCount">
    	UPDATE perDisc set disc_step = 3 WHERE disc_count = 0
    </update>  
     
<!--      18.01.17 동금 수정끝  -->
     
     
   
   </mapper>